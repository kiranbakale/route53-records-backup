name: route53-records-backup
on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  backup-route53-records:
    name: backup-route53-records
    runs-on: ubuntu-24.04
    permissions:
      contents: write
      id-token: write
      
    env:
      REGION: ${{ secrets.aws_region }}
      IAM_ROLE: ${{ secrets.iam_role }}
      SNS_TOPIC_ARN: ${{ secrets.SNS_TOPIC_ARN }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ env.IAM_ROLE }}
          role-session-name: github-actions-federation
          aws-region: ${{ env.REGION }}

      - name: Get AWS Account Name
        id: account-info
        run: |
          aws_account_name=$(aws sts get-caller-identity --query "Arn" --output text | awk -F '/' '{print $2}')
          echo "aws_account_name=$aws_account_name" >> $GITHUB_ENV

      - name: Take Route 53 Backup
        id: backup
        run: |
          timestamp=$(date +"%Y%m%d-%H%M%S")
          account_folder="${{ env.aws_account_name }}"
          
          mkdir -p "${account_folder}"

          hosted_zones=$(aws route53 list-hosted-zones --query 'HostedZones[*].[Name]' --output text)

          echo "$hosted_zones" | while read -r hosted_zone_name; do
            hosted_zone_name=$(echo $hosted_zone_name | sed 's/\.$//')
            
            hosted_zone_id=$(aws route53 list-hosted-zones --query "HostedZones[?Name=='${hosted_zone_name}.'].Id" --output text | awk -F'/' '{print $3}')

            backup_file="${account_folder}/${hosted_zone_name}.json"
            aws route53 list-resource-record-sets --hosted-zone-id $hosted_zone_id --output json > "$backup_file"
          done

          ls "${account_folder}"

          echo "timestamp=${timestamp}" >> $GITHUB_ENV

      - name: Check for Changes
        id: check-changes
        run: |
          git add .
          git diff --exit-code || echo "changes_detected=true" >> $GITHUB_ENV

      - name: Commit and Push Backup json-files to repo
        if: env.changes_detected == 'true'
        run: |
          git config user.name github-actions[bot]
          git config user.email github-actions[bot]@users.noreply.github.com
          git add .
          git commit -m "route53backup_${{ env.timestamp }}"
          git push origin ${{ github.ref }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Notify Backup Status
        run: |
          if [ "${{ env.changes_detected }}" == "true" ]; then
            aws sns publish --topic-arn ${{ env.SNS_TOPIC_ARN }} \
            --subject "Route 53 Backup Successful" \
            --message "The Route 53 backup was successfully completed and committed to the repository"
          else
            aws sns publish --topic-arn ${{ env.SNS_TOPIC_ARN }} \
            --subject "Route 53 Backup - No Changes" \
            --message "The Route 53 backup was completed, but there were no changes to commit."
          fi
        env:
          SNS_TOPIC_ARN: ${{ secrets.SNS_TOPIC_ARN }}

      - name: Send Failure Notification
        if: failure()
        run: |
          aws sns publish --topic-arn ${{ env.SNS_TOPIC_ARN }} \
          --subject "Route 53 Backup Failed!!!" \
          --message "The Route 53 backup failed on ${timestamp}. Please check the GitHub Actions logs for more details."
        env:
          SNS_TOPIC_ARN: ${{ secrets.SNS_TOPIC_ARN }}
